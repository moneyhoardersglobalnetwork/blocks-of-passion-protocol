{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "exchanges",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "createExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"createExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"exchangeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exchanges\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"exchangeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createExchange(address)\":{\"params\":{\"tokenAddress\":\"address: Token address for which the factory will create an exchange\"},\"returns\":{\"exchangeAddress\":\"address: Token/ETH Exchange address\"}},\"getExchange(address)\":{\"params\":{\"tokenAddress\":\"address: Token address for which the factory will create an exchange\"},\"returns\":{\"exchangeAddress\":\"address: Token/ETH Exchange address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createExchange(address)\":{\"notice\":\"Create and deploy a new exchangea similar exchange must not exist\"},\"getExchange(address)\":{\"notice\":\"Find an exchange\"}},\"notice\":\"THIS IS AN EXAMPLE CONTRACT WHICH IS NOT AUDITED PLEASE DO NOT USE THIS CODE IN PRODUCTION.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/amm/uniswap-v1/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/src/contracts/amm/uniswap-v1/Exchange.sol\":{\"keccak256\":\"0x2cc4a8366ff3a4582ed005d913d77041f40f8c23306687cd0b9d27c01544ad5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f5b7c0f7d929914e6ebe2d4af478e84a6d47a37f0fb9c4e9aa161770fe57154\",\"dweb:/ipfs/QmeFsFrArSHYAwFBxm654vM1rZqVfvkpxSiiBJHwyfFdRF\"]},\"project:/src/contracts/amm/uniswap-v1/Factory.sol\":{\"keccak256\":\"0xfb096fa4264b31474b70e0b02cd41395c756d656b96de08a8d5e891e385e6bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9ba06d3f50fe9bd350dadeb70183d23786c3abffd98e7445eea6a189f0a0e12\",\"dweb:/ipfs/QmWtnam9QGd8Gp1DqeaxzvY5JM5kPGpu7UUQ8NxtzYDA3N\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000465760003560e01c806306f2bf62146200004b5780631648f38e14620000815780637412dbb314620000b7575b600080fd5b62000069600480360381019062000063919062000478565b620000ed565b604051620000789190620004bb565b60405180910390f35b6200009f600480360381019062000099919062000478565b620001c7565b604051620000ae9190620004bb565b60405180910390f35b620000d56004803603810190620000cf919062000478565b620003cd565b604051620000e49190620004bb565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001b99062000539565b60405180910390fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200023a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200023190620005ab565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200030a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000301906200061d565b60405180910390fd5b6000826040516200031b9062000400565b620003279190620004bb565b604051809103906000f08015801562000344573d6000803e3d6000fd5b509050806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080915050919050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b613670806200064083390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004408262000413565b9050919050565b620004528162000433565b81146200045e57600080fd5b50565b600081359050620004728162000447565b92915050565b6000602082840312156200049157620004906200040e565b5b6000620004a18482850162000461565b91505092915050565b620004b58162000433565b82525050565b6000602082019050620004d26000830184620004aa565b92915050565b600082825260208201905092915050565b7f45786368616e676520646f657320657869737473000000000000000000000000600082015250565b600062000521601483620004d8565b91506200052e82620004e9565b602082019050919050565b60006020820190508181036000830152620005548162000512565b9050919050565b7f546f6b656e2061646472657373206e6f742076616c6964000000000000000000600082015250565b600062000593601783620004d8565b9150620005a0826200055b565b602082019050919050565b60006020820190508181036000830152620005c68162000584565b9050919050565b7f45786368616e676520616c726561647920657869737473000000000000000000600082015250565b600062000605601783620004d8565b91506200061282620005cd565b602082019050919050565b600060208201905081810360008301526200063881620005f6565b905091905056fe60806040523480156200001157600080fd5b50604051620036703803806200367083398181016040528101906200003791906200022e565b6040518060400160405280600c81526020017f46756e6b797377617020563100000000000000000000000000000000000000008152506040518060400160405280600881526020017f46554e4b592d56310000000000000000000000000000000000000000000000008152508160039081620000b49190620004da565b508060049081620000c69190620004da565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001329062000622565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000644565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f682620001c9565b9050919050565b6200020881620001e9565b81146200021457600080fd5b50565b6000815190506200022881620001fd565b92915050565b600060208284031215620002475762000246620001c4565b5b6000620002578482850162000217565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002e257607f821691505b602082108103620002f857620002f76200029a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003627fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000323565b6200036e868362000323565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003bb620003b5620003af8462000386565b62000390565b62000386565b9050919050565b6000819050919050565b620003d7836200039a565b620003ef620003e682620003c2565b84845462000330565b825550505050565b600090565b62000406620003f7565b62000413818484620003cc565b505050565b5b818110156200043b576200042f600082620003fc565b60018101905062000419565b5050565b601f8211156200048a576200045481620002fe565b6200045f8462000313565b810160208510156200046f578190505b620004876200047e8562000313565b83018262000418565b50505b505050565b600082821c905092915050565b6000620004af600019846008026200048f565b1980831691505092915050565b6000620004ca83836200049c565b9150826002028217905092915050565b620004e58262000260565b67ffffffffffffffff8111156200050157620005006200026b565b5b6200050d8254620002c9565b6200051a8282856200043f565b600060209050601f8311600181146200055257600084156200053d578287015190505b620005498582620004bc565b865550620005b9565b601f1984166200056286620002fe565b60005b828110156200058c5784890151825560018201915060208501945060208101905062000565565b86831015620005ac5784890151620005a8601f8916826200049c565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f696e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b60006200060a601583620005c1565b91506200061782620005d2565b602082019050919050565b600060208201905081810360008301526200063d81620005fb565b9050919050565b61301c80620006546000396000f3fe6080604052600436106101355760003560e01c806395d89b41116100ab578063a9059cbb1161006f578063a9059cbb14610460578063c2507ac11461049d578063dd62ed3e146104da578063e0486c8a14610517578063f7a7e32414610540578063f979dcd71461056957610135565b806395d89b4114610364578063966dae0e1461038f5780639c8f9f23146103ba5780639d76ea58146103f8578063a457c2d71461042357610135565b8063313ce567116100fd578063313ce56714610236578063389d9a4014610261578063395093511461027d57806351c6590a146102ba57806370a08231146102ea5780638fc7a25d1461032757610135565b806306fdde031461013a5780630902f1ac14610165578063095ea7b31461019157806318160ddd146101ce57806323b872dd146101f9575b600080fd5b34801561014657600080fd5b5061014f610585565b60405161015c9190611ef0565b60405180910390f35b34801561017157600080fd5b5061017a610617565b604051610188929190611f2b565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b39190611fe3565b6106bf565b6040516101c5919061203e565b60405180910390f35b3480156101da57600080fd5b506101e36106e2565b6040516101f09190612059565b60405180910390f35b34801561020557600080fd5b50610220600480360381019061021b9190612074565b6106ec565b60405161022d919061203e565b60405180910390f35b34801561024257600080fd5b5061024b61071b565b60405161025891906120e3565b60405180910390f35b61027b600480360381019061027691906120fe565b610724565b005b34801561028957600080fd5b506102a4600480360381019061029f9190611fe3565b610732565b6040516102b1919061203e565b60405180910390f35b6102d460048036038101906102cf919061213e565b610769565b6040516102e19190612059565b60405180910390f35b3480156102f657600080fd5b50610311600480360381019061030c919061216b565b6109c0565b60405161031e9190612059565b60405180910390f35b34801561033357600080fd5b5061034e6004803603810190610349919061213e565b610a08565b60405161035b9190612059565b60405180910390f35b34801561037057600080fd5b50610379610a6f565b6040516103869190611ef0565b60405180910390f35b34801561039b57600080fd5b506103a4610b01565b6040516103b191906121a7565b60405180910390f35b3480156103c657600080fd5b506103e160048036038101906103dc919061213e565b610b27565b6040516103ef929190611f2b565b60405180910390f35b34801561040457600080fd5b5061040d610d60565b60405161041a91906121a7565b60405180910390f35b34801561042f57600080fd5b5061044a60048036038101906104459190611fe3565b610d86565b604051610457919061203e565b60405180910390f35b34801561046c57600080fd5b5061048760048036038101906104829190611fe3565b610dfd565b604051610494919061203e565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf919061213e565b610e20565b6040516104d19190612059565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc91906121c2565b610e87565b60405161050e9190612059565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190612202565b610f0e565b005b34801561054c57600080fd5b5061056760048036038101906105629190612242565b611115565b005b610583600480360381019061057e919061213e565b611449565b005b606060038054610594906122c4565b80601f01602080910402602001604051908101604052809291908181526020018280546105c0906122c4565b801561060d5780601f106105e25761010080835404028352916020019161060d565b820191906000526020600020905b8154815290600101906020018083116105f057829003601f168201915b5050505050905090565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161067591906121a7565b602060405180830381865afa158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b6919061230a565b91504790509091565b6000806106ca611456565b90506106d781858561145e565b600191505092915050565b6000600254905090565b6000806106f7611456565b9050610704858285611627565b61070f8585856116b3565b60019150509392505050565b60006012905090565b61072e8282611929565b5050565b60008061073d611456565b905061075e81858561074f8589610e87565b6107599190612366565b61145e565b600191505092915050565b6000806000610776610617565b9150915060008203610833576000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016107e69392919061239a565b6020604051808303816000875af1158015610805573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082991906123fd565b508193505061096a565b348161083f919061242a565b90506000818334610850919061245e565b61085a91906124cf565b90508085101561089f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108969061254c565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109039392919061239a565b6020604051808303816000875af1158015610922573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094691906123fd565b5082346109516106e2565b61095b919061245e565b61096591906124cf565b945050505b6109743384611a8c565b83343373ffffffffffffffffffffffffffffffffffffffff167f06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca60405160405180910390a45050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000808211610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a43906125b8565b60405180910390fd5b600080610a57610617565b91509150610a66848383611be2565b92505050919050565b606060048054610a7e906122c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaa906122c4565b8015610af75780601f10610acc57610100808354040283529160200191610af7565b820191906000526020600020905b815481529060010190602001808311610ada57829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008311610b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6490612624565b60405180910390fd5b600080610b78610617565b91509150610b846106e2565b8582610b90919061245e565b610b9a91906124cf565b9350610ba46106e2565b8583610bb0919061245e565b610bba91906124cf565b9250610bc63386611c89565b60003373ffffffffffffffffffffffffffffffffffffffff1685604051610bec90612675565b60006040518083038185875af1925050503d8060008114610c29576040519150601f19603f3d011682016040523d82523d6000602084013e610c2e565b606091505b5050905080610c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c69906126d6565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610ccf9291906126f6565b6020604051808303816000875af1158015610cee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1291906123fd565b5083853373ffffffffffffffffffffffffffffffffffffffff167f0fbf06c058b90cb038a618f8c2acbf6145f8b3570fd1fa56abb8f0f3f05b36e860405160405180910390a4505050915091565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610d91611456565b90506000610d9f8286610e87565b905083811015610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb90612791565b60405180910390fd5b610df1828686840361145e565b60019250505092915050565b600080610e08611456565b9050610e158185856116b3565b600191505092915050565b6000808211610e64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5b906127fd565b60405180910390fd5b600080610e6f610617565b91509150610e7e848284611be2565b92505050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080610f19610617565b915091506000610f2a858484611be2565b905083811015610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6690612869565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401610fce9392919061239a565b6020604051808303816000875af1158015610fed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101191906123fd565b5060003373ffffffffffffffffffffffffffffffffffffffff168260405161103890612675565b60006040518083038185875af1925050503d8060008114611075576040519150601f19603f3d011682016040523d82523d6000602084013e61107a565b606091505b50509050806110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b5906126d6565b60405180910390fd5b853373ffffffffffffffffffffffffffffffffffffffff167f7f4091b46c33e918a0f3aa42307641d17bb67029427a5369e54b353984238705846040516111059190612059565b60405180910390a3505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117b906128d5565b60405180910390fd5b600083116111c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111be90612941565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306f2bf62836040518263ffffffff1660e01b815260040161122491906121a7565b6020604051808303816000875af1158015611243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112679190612976565b90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156112d25750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b611311576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611308906129ef565b60405180910390fd5b60008061131c610617565b91509150600061132d878484611be2565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b815260040161138e9392919061239a565b6020604051808303816000875af11580156113ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d191906123fd565b508373ffffffffffffffffffffffffffffffffffffffff1663389d9a408288336040518463ffffffff1660e01b815260040161140e929190612a0f565b6000604051808303818588803b15801561142757600080fd5b505af115801561143b573d6000803e3d6000fd5b505050505050505050505050565b6114538133611929565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c490612aaa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361153c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153390612b3c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161161a9190612059565b60405180910390a3505050565b60006116338484610e87565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146116ad578181101561169f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169690612ba8565b60405180910390fd5b6116ac848484840361145e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611722576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171990612c3a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178890612ccc565b60405180910390fd5b61179c838383611e56565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181990612d5e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516119109190612059565b60405180910390a3611923848484611e5b565b50505050565b600080611934610617565b91509150600061195034348461194a919061242a565b85611be2565b905084811015611995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198c90612dca565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b81526004016119f29291906126f6565b6020604051808303816000875af1158015611a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3591906123fd565b50348473ffffffffffffffffffffffffffffffffffffffff167fcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f83604051611a7d9190612059565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af290612e36565b60405180910390fd5b611b0760008383611e56565b8060026000828254611b199190612366565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611bca9190612059565b60405180910390a3611bde60008383611e5b565b5050565b60008083118015611bf35750600082115b611c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2990612ea2565b60405180910390fd5b60006103e585611c42919061245e565b905060008382611c52919061245e565b9050600082866103e8611c65919061245e565b611c6f9190612366565b90508082611c7d91906124cf565b93505050509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cef90612f34565b60405180910390fd5b611d0482600083611e56565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611d8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8190612fc6565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611e3d9190612059565b60405180910390a3611e5183600084611e5b565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e9a578082015181840152602081019050611e7f565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ec282611e60565b611ecc8185611e6b565b9350611edc818560208601611e7c565b611ee581611ea6565b840191505092915050565b60006020820190508181036000830152611f0a8184611eb7565b905092915050565b6000819050919050565b611f2581611f12565b82525050565b6000604082019050611f406000830185611f1c565b611f4d6020830184611f1c565b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f8482611f59565b9050919050565b611f9481611f79565b8114611f9f57600080fd5b50565b600081359050611fb181611f8b565b92915050565b611fc081611f12565b8114611fcb57600080fd5b50565b600081359050611fdd81611fb7565b92915050565b60008060408385031215611ffa57611ff9611f54565b5b600061200885828601611fa2565b925050602061201985828601611fce565b9150509250929050565b60008115159050919050565b61203881612023565b82525050565b6000602082019050612053600083018461202f565b92915050565b600060208201905061206e6000830184611f1c565b92915050565b60008060006060848603121561208d5761208c611f54565b5b600061209b86828701611fa2565b93505060206120ac86828701611fa2565b92505060406120bd86828701611fce565b9150509250925092565b600060ff82169050919050565b6120dd816120c7565b82525050565b60006020820190506120f860008301846120d4565b92915050565b6000806040838503121561211557612114611f54565b5b600061212385828601611fce565b925050602061213485828601611fa2565b9150509250929050565b60006020828403121561215457612153611f54565b5b600061216284828501611fce565b91505092915050565b60006020828403121561218157612180611f54565b5b600061218f84828501611fa2565b91505092915050565b6121a181611f79565b82525050565b60006020820190506121bc6000830184612198565b92915050565b600080604083850312156121d9576121d8611f54565b5b60006121e785828601611fa2565b92505060206121f885828601611fa2565b9150509250929050565b6000806040838503121561221957612218611f54565b5b600061222785828601611fce565b925050602061223885828601611fce565b9150509250929050565b60008060006060848603121561225b5761225a611f54565b5b600061226986828701611fce565b935050602061227a86828701611fce565b925050604061228b86828701611fa2565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806122dc57607f821691505b6020821081036122ef576122ee612295565b5b50919050565b60008151905061230481611fb7565b92915050565b6000602082840312156123205761231f611f54565b5b600061232e848285016122f5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061237182611f12565b915061237c83611f12565b925082820190508082111561239457612393612337565b5b92915050565b60006060820190506123af6000830186612198565b6123bc6020830185612198565b6123c96040830184611f1c565b949350505050565b6123da81612023565b81146123e557600080fd5b50565b6000815190506123f7816123d1565b92915050565b60006020828403121561241357612412611f54565b5b6000612421848285016123e8565b91505092915050565b600061243582611f12565b915061244083611f12565b925082820390508181111561245857612457612337565b5b92915050565b600061246982611f12565b915061247483611f12565b925082820261248281611f12565b9150828204841483151761249957612498612337565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006124da82611f12565b91506124e583611f12565b9250826124f5576124f46124a0565b5b828204905092915050565b7f496e73756666696369656e7420746f6b656e20616d6f756e7400000000000000600082015250565b6000612536601983611e6b565b915061254182612500565b602082019050919050565b6000602082019050818103600083015261256581612529565b9050919050565b7f546f6b656e20616d6f756e742063616e6e6f74206265206e756c6c0000000000600082015250565b60006125a2601b83611e6b565b91506125ad8261256c565b602082019050919050565b600060208201905081810360008301526125d181612595565b9050919050565b7f416d6f756e74206f6620706f6f6c20746f6b656e2063616e6e6f742062652030600082015250565b600061260e602083611e6b565b9150612619826125d8565b602082019050919050565b6000602082019050818103600083015261263d81612601565b9050919050565b600081905092915050565b50565b600061265f600083612644565b915061266a8261264f565b600082019050919050565b600061268082612652565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b60006126c0601483611e6b565b91506126cb8261268a565b602082019050919050565b600060208201905081810360008301526126ef816126b3565b9050919050565b600060408201905061270b6000830185612198565b6127186020830184611f1c565b9392505050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061277b602583611e6b565b91506127868261271f565b604082019050919050565b600060208201905081810360008301526127aa8161276e565b9050919050565b7f45746820616d6f756e742063616e6e6f74206265206e756c6c00000000000000600082015250565b60006127e7601983611e6b565b91506127f2826127b1565b602082019050919050565b60006020820190508181036000830152612816816127da565b9050919050565b7f45746820416d6f756e74206c6f77000000000000000000000000000000000000600082015250565b6000612853600e83611e6b565b915061285e8261281d565b602082019050919050565b6000602082019050818103600083015261288281612846565b9050919050565b7f546f6b656e2061646472657373206e6f742076616c6964000000000000000000600082015250565b60006128bf601783611e6b565b91506128ca82612889565b602082019050919050565b600060208201905081810360008301526128ee816128b2565b9050919050565b7f546f6b656e7320616d6f756e74206e6f742076616c6964000000000000000000600082015250565b600061292b601783611e6b565b9150612936826128f5565b602082019050919050565b6000602082019050818103600083015261295a8161291e565b9050919050565b60008151905061297081611f8b565b92915050565b60006020828403121561298c5761298b611f54565b5b600061299a84828501612961565b91505092915050565b7f45786368616e67652061646472657373206e6f742076616c6964000000000000600082015250565b60006129d9601a83611e6b565b91506129e4826129a3565b602082019050919050565b60006020820190508181036000830152612a08816129cc565b9050919050565b6000604082019050612a246000830185611f1c565b612a316020830184612198565b9392505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612a94602483611e6b565b9150612a9f82612a38565b604082019050919050565b60006020820190508181036000830152612ac381612a87565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612b26602283611e6b565b9150612b3182612aca565b604082019050919050565b60006020820190508181036000830152612b5581612b19565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612b92601d83611e6b565b9150612b9d82612b5c565b602082019050919050565b60006020820190508181036000830152612bc181612b85565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612c24602583611e6b565b9150612c2f82612bc8565b604082019050919050565b60006020820190508181036000830152612c5381612c17565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612cb6602383611e6b565b9150612cc182612c5a565b604082019050919050565b60006020820190508181036000830152612ce581612ca9565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612d48602683611e6b565b9150612d5382612cec565b604082019050919050565b60006020820190508181036000830152612d7781612d3b565b9050919050565b7f546f6b656e20416d6f756e74206c6f7700000000000000000000000000000000600082015250565b6000612db4601083611e6b565b9150612dbf82612d7e565b602082019050919050565b60006020820190508181036000830152612de381612da7565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612e20601f83611e6b565b9150612e2b82612dea565b602082019050919050565b60006020820190508181036000830152612e4f81612e13565b9050919050565b7f52657365727665732063616e6e6f74206265206e756c6c000000000000000000600082015250565b6000612e8c601783611e6b565b9150612e9782612e56565b602082019050919050565b60006020820190508181036000830152612ebb81612e7f565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612f1e602183611e6b565b9150612f2982612ec2565b604082019050919050565b60006020820190508181036000830152612f4d81612f11565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612fb0602283611e6b565b9150612fbb82612f54565b604082019050919050565b60006020820190508181036000830152612fdf81612fa3565b905091905056fea26469706673582212201b99e455b8370d6600c6b8ca78c2b7782bded57930eb0fe52661fc8d9f58621a64736f6c63430008110033a2646970667358221220b8f51bf6129494dedbd4c8431446cef91aefb5ff68e0d27251c71c7d420c356264736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4625:16",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:16",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:16",
                "type": ""
              }
            ],
            "src": "7:75:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:16"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:16"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:16",
                "type": ""
              }
            ],
            "src": "334:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:16",
                "type": ""
              }
            ],
            "src": "466:96:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:16"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:16"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:16",
                "type": ""
              }
            ],
            "src": "568:122:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:16"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:16",
                "type": ""
              }
            ],
            "src": "696:139:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:16",
                "type": ""
              }
            ],
            "src": "841:329:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1241:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1258:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1281:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1263:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1263:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:37:16"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1236:3:16",
                "type": ""
              }
            ],
            "src": "1176:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1398:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1408:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1420:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1431:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1416:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1408:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1488:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1501:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1512:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1444:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1444:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1444:71:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1370:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1382:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1393:4:16",
                "type": ""
              }
            ],
            "src": "1300:222:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1624:73:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1641:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1646:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1634:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1634:19:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1634:19:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1662:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1681:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1686:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1677:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1677:14:16"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1662:11:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1596:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1601:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1612:11:16",
                "type": ""
              }
            ],
            "src": "1528:169:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1809:64:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1831:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1839:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1827:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1827:14:16"
                      },
                      {
                        "hexValue": "45786368616e676520646f657320657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1843:22:16",
                        "type": "",
                        "value": "Exchange does exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1820:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1820:46:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1820:46:16"
                }
              ]
            },
            "name": "store_literal_in_memory_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1801:6:16",
                "type": ""
              }
            ],
            "src": "1703:170:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2025:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2035:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2101:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2106:2:16",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2042:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2042:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2035:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2207:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212",
                      "nodeType": "YulIdentifier",
                      "src": "2118:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2118:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2118:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2220:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2231:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2236:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2227:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2227:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2220:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2013:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2021:3:16",
                "type": ""
              }
            ],
            "src": "1879:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2422:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2432:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2444:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2455:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2440:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2440:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2432:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2479:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2490:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2475:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2475:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2498:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2504:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2494:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2494:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2468:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2468:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2468:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2524:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2658:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2532:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2524:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2402:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2417:4:16",
                "type": ""
              }
            ],
            "src": "2251:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2782:67:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2804:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2812:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2800:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2800:14:16"
                      },
                      {
                        "hexValue": "546f6b656e2061646472657373206e6f742076616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2816:25:16",
                        "type": "",
                        "value": "Token address not valid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2793:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2793:49:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2793:49:16"
                }
              ]
            },
            "name": "store_literal_in_memory_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2774:6:16",
                "type": ""
              }
            ],
            "src": "2676:173:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3001:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3011:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3077:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3082:2:16",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3018:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3018:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3011:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3183:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6",
                      "nodeType": "YulIdentifier",
                      "src": "3094:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3094:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3094:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3196:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3207:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3212:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3203:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3203:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3196:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2989:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2997:3:16",
                "type": ""
              }
            ],
            "src": "2855:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3398:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3408:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3420:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3431:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3416:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3416:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3408:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3455:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3466:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3451:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3451:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3474:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3480:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3470:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3470:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3444:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3444:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3444:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3500:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3634:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3508:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3508:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3500:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3378:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3393:4:16",
                "type": ""
              }
            ],
            "src": "3227:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3758:67:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3780:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3788:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3776:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3776:14:16"
                      },
                      {
                        "hexValue": "45786368616e676520616c726561647920657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3792:25:16",
                        "type": "",
                        "value": "Exchange already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3769:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3769:49:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3769:49:16"
                }
              ]
            },
            "name": "store_literal_in_memory_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3750:6:16",
                "type": ""
              }
            ],
            "src": "3652:173:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3977:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3987:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4053:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4058:2:16",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3994:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3994:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3987:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4159:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f",
                      "nodeType": "YulIdentifier",
                      "src": "4070:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4070:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4070:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4172:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4183:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4188:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4179:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4179:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4172:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3965:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3973:3:16",
                "type": ""
              }
            ],
            "src": "3831:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4374:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4384:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4396:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4407:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4392:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4392:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4384:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4431:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4442:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4427:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4427:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4450:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4456:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4446:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4446:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4420:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4420:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4420:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4476:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4610:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4484:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4484:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4476:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4354:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4369:4:16",
                "type": ""
              }
            ],
            "src": "4203:419:16"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exchange does exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address not valid\")\n\n    }\n\n    function abi_encode_t_stringliteral_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exchange already exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "188:1191:13:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "188:1191:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1158:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;537:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;211:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1158:219;1222:23;1275:9;:23;1285:12;1275:23;;;;;;;;;;;;;;;;;;;;;;;;;1257:41;;1343:1;1316:29;;:15;:29;;;1308:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1158:219;;;:::o;537:405::-;599:23;666:1;642:26;;:12;:26;;;634:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;749:1;714:37;;:9;:23;724:12;714:23;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;706:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;790:17;823:12;810:26;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;790:46;;880:8;846:9;:23;856:12;846:23;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;926:8;900:35;;624:318;537:405;;;:::o;211:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:16:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:170::-;1843:22;1839:1;1831:6;1827:14;1820:46;1703:170;:::o;1879:366::-;2021:3;2042:67;2106:2;2101:3;2042:67;:::i;:::-;2035:74;;2118:93;2207:3;2118:93;:::i;:::-;2236:2;2231:3;2227:12;2220:19;;1879:366;;;:::o;2251:419::-;2417:4;2455:2;2444:9;2440:18;2432:26;;2504:9;2498:4;2494:20;2490:1;2479:9;2475:17;2468:47;2532:131;2658:4;2532:131;:::i;:::-;2524:139;;2251:419;;;:::o;2676:173::-;2816:25;2812:1;2804:6;2800:14;2793:49;2676:173;:::o;2855:366::-;2997:3;3018:67;3082:2;3077:3;3018:67;:::i;:::-;3011:74;;3094:93;3183:3;3094:93;:::i;:::-;3212:2;3207:3;3203:12;3196:19;;2855:366;;;:::o;3227:419::-;3393:4;3431:2;3420:9;3416:18;3408:26;;3480:9;3474:4;3470:20;3466:1;3455:9;3451:17;3444:47;3508:131;3634:4;3508:131;:::i;:::-;3500:139;;3227:419;;;:::o;3652:173::-;3792:25;3788:1;3780:6;3776:14;3769:49;3652:173;:::o;3831:366::-;3973:3;3994:67;4058:2;4053:3;3994:67;:::i;:::-;3987:74;;4070:93;4159:3;4070:93;:::i;:::-;4188:2;4183:3;4179:12;4172:19;;3831:366;;;:::o;4203:419::-;4369:4;4407:2;4396:9;4392:18;4384:26;;4456:9;4450:4;4446:20;4442:1;4431:9;4427:17;4420:47;4484:131;4610:4;4484:131;:::i;:::-;4476:139;;4203:419;;;:::o",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"./Exchange.sol\";\n\n/**\n * THIS IS AN EXAMPLE CONTRACT WHICH IS NOT AUDITED\n * PLEASE DO NOT USE THIS CODE IN PRODUCTION.\n */\ncontract Factory {\n    mapping(address => address) public exchanges;\n\n    /**\n     * Create and deploy a new exchange\n     *\n     * @param tokenAddress address: Token address for which the factory will create an exchange\n     * @return exchangeAddress address: Token/ETH Exchange address\n     * @notice a similar exchange must not exist\n     */\n    function createExchange(address tokenAddress) public returns (address exchangeAddress) {\n        require(tokenAddress != address(0), \"Token address not valid\");\n        require(exchanges[tokenAddress] == address(0), \"Exchange already exists\");\n\n        Exchange exchange = new Exchange(tokenAddress);\n        exchanges[tokenAddress] = address(exchange);\n\n        exchangeAddress = address(exchange);\n    }\n\n    /**\n     * Find an exchange\n     *\n     * @param tokenAddress address: Token address for which the factory will create an exchange\n     * @return exchangeAddress address: Token/ETH Exchange address\n     */\n    function getExchange(address tokenAddress) public view returns (address exchangeAddress) {\n        exchangeAddress = exchanges[tokenAddress];\n        require(exchangeAddress != address(0), \"Exchange does exists\");\n    }\n}\n",
  "sourcePath": "/home/moneyhoardermike/ChainLink/blocks-of-passion-protocol/src/contracts/amm/uniswap-v1/Factory.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/amm/uniswap-v1/Factory.sol",
    "exportedSymbols": {
      "Context": [
        924
      ],
      "ERC20": [
        799
      ],
      "Exchange": [
        4101
      ],
      "Factory": [
        4191
      ],
      "IERC20": [
        877
      ],
      "IERC20Metadata": [
        902
      ],
      "IExchange": [
        3450
      ],
      "IFactory": [
        3458
      ]
    },
    "id": 4192,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4103,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:13"
      },
      {
        "absolutePath": "project:/src/contracts/amm/uniswap-v1/Exchange.sol",
        "file": "./Exchange.sol",
        "id": 4104,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4192,
        "sourceUnit": 4102,
        "src": "56:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Factory",
        "contractDependencies": [
          4101
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4105,
          "nodeType": "StructuredDocumentation",
          "src": "82:105:13",
          "text": " THIS IS AN EXAMPLE CONTRACT WHICH IS NOT AUDITED\n PLEASE DO NOT USE THIS CODE IN PRODUCTION."
        },
        "fullyImplemented": true,
        "id": 4191,
        "linearizedBaseContracts": [
          4191
        ],
        "name": "Factory",
        "nameLocation": "197:7:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "7412dbb3",
            "id": 4109,
            "mutability": "mutable",
            "name": "exchanges",
            "nameLocation": "246:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 4191,
            "src": "211:44:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 4108,
              "keyType": {
                "id": 4106,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "219:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "211:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4107,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "230:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4164,
              "nodeType": "Block",
              "src": "624:318:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4118,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4112,
                          "src": "642:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "666:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "658:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4119,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "658:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "658:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "642:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e2061646472657373206e6f742076616c6964",
                        "id": 4124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "670:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6",
                          "typeString": "literal_string \"Token address not valid\""
                        },
                        "value": "Token address not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7373a2579ad85dad589acd77cab8840ad1956e636a1ac7ca1b4dbd4bd3f95ab6",
                          "typeString": "literal_string \"Token address not valid\""
                        }
                      ],
                      "id": 4117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "634:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:62:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4126,
                  "nodeType": "ExpressionStatement",
                  "src": "634:62:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4128,
                            "name": "exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4109,
                            "src": "714:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 4130,
                          "indexExpression": {
                            "id": 4129,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4112,
                            "src": "724:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "714:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "749:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "741:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4131,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "741:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "741:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "714:37:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e676520616c726561647920657869737473",
                        "id": 4136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "753:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f",
                          "typeString": "literal_string \"Exchange already exists\""
                        },
                        "value": "Exchange already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4855b06a2c3babb1e4e23793d2f453f82ab22647a781fadf90588b60b30f079f",
                          "typeString": "literal_string \"Exchange already exists\""
                        }
                      ],
                      "id": 4127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "706:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:73:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4138,
                  "nodeType": "ExpressionStatement",
                  "src": "706:73:13"
                },
                {
                  "assignments": [
                    4141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4141,
                      "mutability": "mutable",
                      "name": "exchange",
                      "nameLocation": "799:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4164,
                      "src": "790:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$4101",
                        "typeString": "contract Exchange"
                      },
                      "typeName": {
                        "id": 4140,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4139,
                          "name": "Exchange",
                          "nameLocations": [
                            "790:8:13"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4101,
                          "src": "790:8:13"
                        },
                        "referencedDeclaration": 4101,
                        "src": "790:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$4101",
                          "typeString": "contract Exchange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4147,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4145,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4112,
                        "src": "823:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "810:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Exchange_$4101_$",
                        "typeString": "function (address) returns (contract Exchange)"
                      },
                      "typeName": {
                        "id": 4143,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4142,
                          "name": "Exchange",
                          "nameLocations": [
                            "814:8:13"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4101,
                          "src": "814:8:13"
                        },
                        "referencedDeclaration": 4101,
                        "src": "814:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$4101",
                          "typeString": "contract Exchange"
                        }
                      }
                    },
                    "id": 4146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "810:26:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Exchange_$4101",
                      "typeString": "contract Exchange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "790:46:13"
                },
                {
                  "expression": {
                    "id": 4155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4148,
                        "name": "exchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4109,
                        "src": "846:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4150,
                      "indexExpression": {
                        "id": 4149,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4112,
                        "src": "856:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "846:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4153,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4141,
                          "src": "880:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$4101",
                            "typeString": "contract Exchange"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Exchange_$4101",
                            "typeString": "contract Exchange"
                          }
                        ],
                        "id": 4152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "872:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "872:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "872:17:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "846:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4156,
                  "nodeType": "ExpressionStatement",
                  "src": "846:43:13"
                },
                {
                  "expression": {
                    "id": 4162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4157,
                      "name": "exchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4115,
                      "src": "900:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4160,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4141,
                          "src": "926:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$4101",
                            "typeString": "contract Exchange"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Exchange_$4101",
                            "typeString": "contract Exchange"
                          }
                        ],
                        "id": 4159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "918:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "918:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "918:17:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "900:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4163,
                  "nodeType": "ExpressionStatement",
                  "src": "900:35:13"
                }
              ]
            },
            "documentation": {
              "id": 4110,
              "nodeType": "StructuredDocumentation",
              "src": "262:270:13",
              "text": " Create and deploy a new exchange\n @param tokenAddress address: Token address for which the factory will create an exchange\n @return exchangeAddress address: Token/ETH Exchange address\n @notice a similar exchange must not exist"
            },
            "functionSelector": "1648f38e",
            "id": 4165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createExchange",
            "nameLocation": "546:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4112,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "569:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4165,
                  "src": "561:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "560:22:13"
            },
            "returnParameters": {
              "id": 4116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4115,
                  "mutability": "mutable",
                  "name": "exchangeAddress",
                  "nameLocation": "607:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4165,
                  "src": "599:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:25:13"
            },
            "scope": 4191,
            "src": "537:405:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4189,
              "nodeType": "Block",
              "src": "1247:130:13",
              "statements": [
                {
                  "expression": {
                    "id": 4177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4173,
                      "name": "exchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4171,
                      "src": "1257:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 4174,
                        "name": "exchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4109,
                        "src": "1275:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4176,
                      "indexExpression": {
                        "id": 4175,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4168,
                        "src": "1285:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1275:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1257:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4178,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:41:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4180,
                          "name": "exchangeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4171,
                          "src": "1316:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1343:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1335:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4181,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1335:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1335:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1316:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e676520646f657320657869737473",
                        "id": 4186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1347:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212",
                          "typeString": "literal_string \"Exchange does exists\""
                        },
                        "value": "Exchange does exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1bf150d8102a51772a6d24713b45d992b199d212a81eab640e561fbcdaea212",
                          "typeString": "literal_string \"Exchange does exists\""
                        }
                      ],
                      "id": 4179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1308:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1308:62:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4188,
                  "nodeType": "ExpressionStatement",
                  "src": "1308:62:13"
                }
              ]
            },
            "documentation": {
              "id": 4166,
              "nodeType": "StructuredDocumentation",
              "src": "948:205:13",
              "text": " Find an exchange\n @param tokenAddress address: Token address for which the factory will create an exchange\n @return exchangeAddress address: Token/ETH Exchange address"
            },
            "functionSelector": "06f2bf62",
            "id": 4190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nameLocation": "1167:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4168,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1187:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4190,
                  "src": "1179:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:22:13"
            },
            "returnParameters": {
              "id": 4172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4171,
                  "mutability": "mutable",
                  "name": "exchangeAddress",
                  "nameLocation": "1230:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4190,
                  "src": "1222:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1221:25:13"
            },
            "scope": 4191,
            "src": "1158:219:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4192,
        "src": "188:1191:13",
        "usedErrors": []
      }
    ],
    "src": "31:1349:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-18T03:53:16.935Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createExchange(address)": {
        "params": {
          "tokenAddress": "address: Token address for which the factory will create an exchange"
        },
        "returns": {
          "exchangeAddress": "address: Token/ETH Exchange address"
        }
      },
      "getExchange(address)": {
        "params": {
          "tokenAddress": "address: Token address for which the factory will create an exchange"
        },
        "returns": {
          "exchangeAddress": "address: Token/ETH Exchange address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createExchange(address)": {
        "notice": "Create and deploy a new exchangea similar exchange must not exist"
      },
      "getExchange(address)": {
        "notice": "Find an exchange"
      }
    },
    "notice": "THIS IS AN EXAMPLE CONTRACT WHICH IS NOT AUDITED PLEASE DO NOT USE THIS CODE IN PRODUCTION.",
    "version": 1
  }
}